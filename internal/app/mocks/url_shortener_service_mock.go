// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/apolsh/yapr-url-shortener/internal/app/service (interfaces: URLShortenerService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	dto "github.com/apolsh/yapr-url-shortener/internal/app/repository/dto"
	entity "github.com/apolsh/yapr-url-shortener/internal/app/repository/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockURLShortenerService is a mocks of URLShortenerService interface.
type MockURLShortenerService struct {
	ctrl     *gomock.Controller
	recorder *MockURLShortenerServiceMockRecorder
}

// MockURLShortenerServiceMockRecorder is the mocks recorder for MockURLShortenerService.
type MockURLShortenerServiceMockRecorder struct {
	mock *MockURLShortenerService
}

// NewMockURLShortenerService creates a new mocks instance.
func NewMockURLShortenerService(ctrl *gomock.Controller) *MockURLShortenerService {
	mock := &MockURLShortenerService{ctrl: ctrl}
	mock.recorder = &MockURLShortenerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLShortenerService) EXPECT() *MockURLShortenerServiceMockRecorder {
	return m.recorder
}

// AddNewURL mocks base method.
func (m *MockURLShortenerService) AddNewURL(arg0 entity.ShortenedURLInfo) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewURL", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNewURL indicates an expected call of AddNewURL.
func (mr *MockURLShortenerServiceMockRecorder) AddNewURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewURL", reflect.TypeOf((*MockURLShortenerService)(nil).AddNewURL), arg0)
}

// AddNewURLsInBatch mocks base method.
func (m *MockURLShortenerService) AddNewURLsInBatch(arg0 string, arg1 []dto.ShortenInBatchRequestItem) ([]*dto.ShortenInBatchResponseItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewURLsInBatch", arg0, arg1)
	ret0, _ := ret[0].([]*dto.ShortenInBatchResponseItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNewURLsInBatch indicates an expected call of AddNewURLsInBatch.
func (mr *MockURLShortenerServiceMockRecorder) AddNewURLsInBatch(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewURLsInBatch", reflect.TypeOf((*MockURLShortenerService)(nil).AddNewURLsInBatch), arg0, arg1)
}

// GetByOriginalURL mocks base method.
func (m *MockURLShortenerService) GetByOriginalURL(arg0 string) (*entity.ShortenedURLInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByOriginalURL", arg0)
	ret0, _ := ret[0].(*entity.ShortenedURLInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByOriginalURL indicates an expected call of GetByOriginalURL.
func (mr *MockURLShortenerServiceMockRecorder) GetByOriginalURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByOriginalURL", reflect.TypeOf((*MockURLShortenerService)(nil).GetByOriginalURL), arg0)
}

// GetURLByID mocks base method.
func (m *MockURLShortenerService) GetURLByID(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLByID", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLByID indicates an expected call of GetURLByID.
func (mr *MockURLShortenerServiceMockRecorder) GetURLByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLByID", reflect.TypeOf((*MockURLShortenerService)(nil).GetURLByID), arg0)
}

// GetURLsByOwnerID mocks base method.
func (m *MockURLShortenerService) GetURLsByOwnerID(arg0 string) ([]entity.ShortenedURLInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLsByOwnerID", arg0)
	ret0, _ := ret[0].([]entity.ShortenedURLInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLsByOwnerID indicates an expected call of GetURLsByOwnerID.
func (mr *MockURLShortenerServiceMockRecorder) GetURLsByOwnerID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLsByOwnerID", reflect.TypeOf((*MockURLShortenerService)(nil).GetURLsByOwnerID), arg0)
}

// PingDB mocks base method.
func (m *MockURLShortenerService) PingDB() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDB")
	ret0, _ := ret[0].(bool)
	return ret0
}

// PingDB indicates an expected call of PingDB.
func (mr *MockURLShortenerServiceMockRecorder) PingDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDB", reflect.TypeOf((*MockURLShortenerService)(nil).PingDB))
}
